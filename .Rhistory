closing$close <- closing$close[200:length(closing$close)]
new$close <- closing$close[200:length(closing$close)]
closing$close[200:length(closing$close)]
?tail
closing <- closing %>% tail(477)
ggplot(close,aes(x=close))
ggplot(closing,aes(x=close))
ggplot(closing,aes(x=close))+ geom_line()
ggplot(closing,aes(y=close))+ geom_line()
View(Ba)
closing <- select(Ba,close,date)
Ba <- read.csv("BA.csv")
closing <- select(Ba,close,date)
x50 <- stats::filter(closing, rep(1/50, 50), side = 1)[200:length(closing$close)]
x100 <- stats::filter(closing, rep(1/100, 100), side = 1)[200:length(closing$close)]
x200 <- stats::filter(closing, rep(1/200, 200), side = 1)[200:length(closing$close)]
closing <- closing %>% tail(477)
ggplot(closing,aes(x=date,y=close))+ geom_line()
ggplot(closing,aes(x=date,y=close))
?scale_x_date
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime()
closing <- select(Ba,close,date) %>% mutate(date = as.POSIXct(date))
closing <- closing %>% tail(477)
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime()
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +geom_line()
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50))
?geom_line
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
theme(legend.position = "bottom")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
theme(legend.position = "bottom")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
theme(legend.position = "left")
ggplot(closing,aes(x=date,y=close),colour = factor(cyl)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50)) +
geom_line(aes(y=x100)) +
geom_line(aes(y=x200)) +
theme(legend.position = "left")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
theme(legend.position = "left")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
labs(title = "Boeing closing price", xlab= "Date")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
labs(title = "Boeing closing price", x= "Date")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
labs(title = "Boeing closing price", x= "Date", y="Closing")
ggplot(closing,aes(x=date,y=close)) + scale_x_datetime(date_labels = "%D") +
geom_line() +
geom_line(aes(y=x50), colour = "red") +
geom_line(aes(y=x100), colour = "blue") +
geom_line(aes(y=x200), colour = "green") +
labs(title = "Boeing closing price", x= "Date", y="Closing", caption = "red is 50 day avg., blue is 100 and green is 200")
2-sqrt(2)
?polyroot
polyroot(c(1,2))
polyroot(c(1,-0.9,0.16,0.02))
?ARMAacf()
?gsub
x = c("a","r","e")
text = "Hi how are you god"
grep("a|e|r",x)
grep("a|e|e",x)
grep("a|r|e",x)
grepl("a|r|e",x)
grepl("a|re",x)
grepl("are",x)
grepl("are",text)
grep("a|r|e",text)
grep("a|r|e",text, value = TRUE)
grepl("a|r|e",text, value = TRUE)
text = "Hi how are you god"
text = "Hi how are \n you god"
grep("a|r|e",text, value = TRUE)
text = "Hi how are /n you god"
grep("a|r|e",text, value = TRUE)
regexpr("a|r|e",text)
text = "Hi how are you rach"
regexpr("a|r|e",text)
regexec("a|r|e",text)
a = regexec("a|r|e",text)
a = regexpr("a|r|e",text)
grepl("a|r|e",text)
grepl("a|r|e",text, value= TRUE)
grep("a|r|e",text, value= TRUE)
text = "Hi how are you rach","god are"
text = c("Hi how are you rach","god are")
grep("a|r|e",text, value= TRUE)
df <- read.csv("NFLX.csv")
View(df)
library(tidyr)
library(dplyr)
library(lubridate)
df <- read.csv("NFLX.csv")
library(tidyr)
library(dplyr)
library(lubridate)
df <- read.csv("NFLX.csv")
View(df)
library(tidyr)
library(dplyr)
library(lubridate)
df <- read.csv("NFLX.csv")
View(df)
library(ggplot2)
?scale_x_discrete
View(df)
df %>% mutate(Date = as.POSIXct.Date(Date)) %>% ggplot(aes(x = Date, y= Adj.Close)) + geom_line() + scale_x_datetime(date_labels = "%F") + labs(x = "Date", y = "Avg. closing", title ="Netflix's Average closing price")
?as.POSIXct()
df %>% mutate(Date = as.POSIXct(Date)) %>% ggplot(aes(x = Date, y= Adj.Close)) + geom_line() + scale_x_datetime(date_labels = "%F") + labs(x = "Date", y = "Avg. closing", title ="Netflix's Average closing price")
df %>% mutate(Date = as.POSIXct(Date)) %>% ggplot(aes(x = Date, y= Adj.Close)) + geom_line() + scale_x_datetime(date_labels = "%F") + labs(x = "Date", y = "Avg. closing", title ="Netflix's Average closing price")
?ts
ts(df$Adj.Close,start = c(2002,5,23), end = c(2020,8,3), frequency = 365)
test = ts(df$Adj.Close,start = c(2002,5,23), end = c(2020,8,3), frequency = 365)
plot(test)
View(test)
test
?ts
test = ts(df$Adj.Close,start = c(2002,5,23), end = c(2020,8,3), frequency = 1)
plot(test)
test = ts(df$Adj.Close,start = c(2002,5,23), end = c(2020,8,3), frequency = 365)
plot(test)
?ts
library(astsa)
data <- so2
library(astsa)
data <- so2
library(astsa)
ts <- so2
tsa <- log(ts)
plot(tsa)
library(astsa)
ts <- so2
plot(ts)
tsa <- log(ts)
plot(tsa)
tsb <- diff(tsa)
plot(tsb)
acf(tsb)
acf(tsb, lag.max = 10)
acf(tsb, lag.max = 10)
pacf(tsb, lag.max = 10)
arima1 <- arima(tsa, c(0,1,1))
arima1
arima1 <- arima(tsa, c(0,1,1))
plot(acf(arima1$residuals, lag.max = 10))
arima1 <- arima(tsa, c(0,1,1))
acf(arima1$residuals, lag.max = 10)
arima1 <- arima(tsa, c(0,1,1))
acf(arima1$residuals, lag.max = 10)
qqline(arima1$residuals)
arima1 <- arima(tsa, c(0,1,1))
acf(arima1$residuals, lag.max = 10)
qqnorm(arima1$residuals)
qqline(arima1$residuals)
arima1 <- arima(tsa, c(0,1,1))
acf(arima1$residuals, lag = 10)
qqnorm(arima1$residuals)
qqline(arima1$residuals)
Box.test()
arima1 <- arima(tsa, c(0,1,1))
acf(arima1$residuals, lag = 10)
qqnorm(arima1$residuals)
qqline(arima1$residuals)
Box.test(arima1$residuals, lag=20, fitdf = 1)
library(astsa)
ts <- so2
plot(ts)
tsa <- log(ts)
plot(tsa)
ts <- unemp
acf(ts, lag = 30)
ts <- unemp
acf(ts, lag = 60)
ts <- unemp
plot(ts)
acf(ts, lag = 60)
ts <- unemp
plot(ts)
ts1 <- diff(ts)
plot(ts1)
acf(ts, lag = 60)
ts <- unemp
plot(ts)
ts1 <- diff(ts)
plot(ts1)
ts2 <- log(ts1)
plot(ts2)
acf(ts, lag = 60)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts, lag = 60)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
ts <- unemp
ACF = ARMAacf(ar=ts, lag.max=100)
PACF = ARMAacf(ar=ts, lag.max=100, pacf=TRUE)
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
ts <- unemp
plot(ARMAacf(ar=ts, lag.max=100))
plot(ARMAacf(ar=ts, lag.max=100, pacf=TRUE))
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
ts <- unemp
ACF = ARMAacf(ar=ts, lag.max=100)
PACF = ARMAacf(ar=ts, lag.max=100, pacf=TRUE)
plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
ts <- unemp
ACF = ARMAacf(ar=ts, lag.max=100)
PACF = ARMAacf(ar=ts, lag.max=100, pacf=TRUE)
library(astsa)
ts <- so2
plot(ts)
tsa <- log(ts)
plot(tsa)
ts <- unemp
ACF = ARMAacf(ar=ts, lag.max=100)
PACF = ARMAacf(ar=ts, lag.max=100, pacf=TRUE)
plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
?arima
plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
#plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
#plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf(ts2, lag = 60)
?arima
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
ACF = ARMAacf(ar=ts, lag.max=100)
PACF = ARMAacf(ar=ts, lag.max=100, pacf=TRUE)
plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
ACF = ARMAacf(ar=ts2, lag.max=100)
PACF = ARMAacf(ar=ts2, lag.max=100, pacf=TRUE)
plot(ACF,type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
plot(PACF, type="h", xlab="LAG", ylim=c(-.1,1)); abline(h=0)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf2(ts2)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
acf2(ts2)
acf2(ts2,12)
phi = c(rep(0,11),.8)
ACF = ARMAacf(ar=phi, ma=0.5, lag.max=3)
plot(0:50, ACF,  type="h", xlab="LAG", ylim=c(-0.4, 1.1));  abline(h=0)
phi = c(rep(0,11),.8)
ACF = ARMAacf(ar=phi, ma=0.5, lag.max=3)
plot(0:3, ACF,  type="h", xlab="LAG", ylim=c(-0.4, 1.1));  abline(h=0)
phi = c(rep(0,11),.8)
ACF = ARMAacf(ar=phi, ma=0.5, lag.max=50)
plot(0:50, ACF,  type="h", xlab="LAG", ylim=c(-0.4, 1.1));  abline(h=0)
phi = c(rep(0,11),.8)
ACF = ARMAacf(ar=phi, ma=0.5, lag.max=5)
plot(0:5, ACF,  type="h", xlab="LAG", ylim=c(-0.4, 1.1));  abline(h=0)
phi = c(rep(0,11),.8)
ACF = ARMAacf(ar=phi, ma=0.5, lag.max=100)
plot(0:100, ACF,  type="h", xlab="LAG", ylim=c(-0.4, 1.1));  abline(h=0)
model1 <- arima(ts, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model1
model1 <- arima(ts, order=c(5, 1,5), seasonal=list(order=c(1, 1,0), period=12))
model1
model1 <- arima(ts, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model1
model1 <- arima(ts, order=c(0, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model1
model1 <- arima(ts, order=c(1, 1,1), seasonal=list(order=c(1, 0,0), period=12))
model1
model1 <- arima(ts, order=c(1, 1,1), seasonal=list(order=c(1, 1,1), period=12))
model1
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,1), period=12))
model1
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model1
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
ts3 <- diff(ts2,12)
plot(ts3)
acf2(ts2)
ts <- unemp
plot(ts)
ts1 <- log(ts)
plot(ts1)
ts2 <- diff(ts1)
plot(ts2)
ts3 <- diff(ts2,12)
plot(ts3)
acf2(ts3)
acf2(ts3,12)
?Box.test()
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model1
model2 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(0, 1,1), period=12))
model2
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,1), period=12))
model1
model2 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(0, 1,1), period=12))
model2
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,1), period=12))
model1
model2 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model2
model3 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(0, 1,1), period=12))
model3
model4 <- arima(ts1, order=c(0, 1,1), seasonal=list(order=c(0, 1,1), period=12))
model4
model5 <- arima(ts1, order=c(1, 1,0), seasonal=list(order=c(0, 1,1), period=12))
model5
model1 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,1), period=12))
model1
model2 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(1, 1,0), period=12))
model2
model3 <- arima(ts1, order=c(1, 1,1), seasonal=list(order=c(0, 1,1), period=12))
model3
qqnorm(model3$residuals)
qqline(model3$residuals)
Box.test(model3$residuals, lag=20, fitdf = 3)
df <- read.csv("NFLX.csv")
View(df)
x <- ts(df$Adj.Close)
plot(x)
x <- ts(df$Adj.Close)
plot(x)
diff(x)
x <- ts(df$Adj.Close)
plot(x)
plot(diff(x))
x <- ts(log(df$Adj.Close))
x <- ts(log(df$Adj.Close))
dx <- diff(x)
acf2(dx)
pacf(dx)
?arima
```{r}
x <- ts(log(df$Adj.Close))
dx <- diff(x)
pacf(dx)
arima(dx, order = c(1,1,0))
arima(dx, order = c(5,1,0))
arima(dx, order = c(1,1,0))
arima(dx, order = c(4,1,0))
arima(dx, order = c(5,1,0))
arima(dx, order = c(8,1,0))
arima(x, order = c(1,1,0))
arima(x, order = c(4,1,0))
arima(x, order = c(5,1,0))
arima(x, order = c(8,1,0))
sd((-10:10)^2)
#Load in text
text <- readChar("Index_HALF.txt", file.info("Index_HALF.txt")$size)
setwd("~/work/Semester 8/Job Hunt/IndexReader")
#Load in text
text <- readChar("Index_HALF.txt", file.info("Index_HALF.txt")$size)
# Breaks the text at each congress person's name format LAST, I. FIRST
matches <- str_split(text, "(?=(\\n[A-Z]{3,}, (([A-Z]\\. )?)[A-Z]{3,}))")
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
# Breaks the text at each congress person's name format LAST, I. FIRST
matches <- str_split(text, "(?=(\\n[A-Z]{3,}, (([A-Z]\\. )?)[A-Z]{3,}))")
# Remove newline characters and carriage return
clean <- gsub("\\r|\\n","", matches[[1]])
# Partitions matches file into list of lists where each entry is a person and what they have said
# In addition makes breaks in sublist at the beginning of their remarks
regex <- '(?<=[A-Z]{3,25},\\s(([A-Z]\\. )?)[A-Z]{3,25})( |,|-|-)|(?<=\\d{3,4}\\.)|(?<=Remark by, on)|(?<=Remarks by, on)|\\n'
members <- lapply(clean, str_split, regex)
#selects only the members listed with remarks by, on
Speaking = members[grep("Remarks by, on",members)]
# Instantiates a data frame
Table <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(Table) <- c("Name","Topics")
# Creates a df of format Name | Topics
for (i in 1:length(Speaking)) {
startlocation <- min(grep('Remarks by, on',Speaking[[i]][[1]]))
stoplocation <- min(grep('(Votes of.)|(Vote of.)', Speaking[[i]][[1]]),length(Speaking))
for (j in (startlocation+1):(stoplocation-1)) {
Table <- rbind(Table, as.vector(c(Speaking[[i]][[1]][1],Speaking[[i]][[1]][j])))
}
}
# Label columns
colnames(Table) <- c("Name","Topics")
# Removes artifact of the pdf being split into columns
Table <- Table %>% filter(str_detect(Table$Topics,"ContinuedRemarks|Remarks by, on",negate = TRUE))
# Now work on separating pages into their own column
Topicslist <- lapply(Table$Topics, str_split, "(?=[0-9]{3,})", n = 2)
Topics <- "Topics"
Pages <- "Pages"
for (i in 1:length(Topicslist)) {
Topics <- rbind(Topics, Topicslist[[i]][[1]][1])
Pages <- rbind(Pages, Topicslist[[i]][[1]][2])
}
Table$Topics <- Topics[-1]
Table$Page <- Pages[-1]
# Remove topics without pages
Table <- Table[complete.cases(Table), ]
# Remove amended remarks
NoAmends <- "NoAmends"
for (i in 1:length(Table$Page)) {
n <- length(str_split(Table$Page[i],",")[[1]]) - length(grep("A|a",str_split(Table$Page[i],",")[[1]]))
NoAmends <- rbind(NoAmends,n)
}
View(Table)
Table$NoAmends <-  NoAmends[-1]
#Remove middle initial to agree with provided csv. May not be a necessary step
#Depending on how you format your own house and senate csvs
a <- str_split(Table$Name[1:length(Table$Name)]," ")
listOfNames <- c("NoInitals")
for (i in 1:length(a)) {
listOfNames <- rbind(listOfNames, paste(a[[i]][1],a[[i]][length(a[[i]])], sep=" "))
}
Table$Name <- listOfNames[-1]
#Save full data
write.csv(Table,"Bound.csv")
